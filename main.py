# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\create_chat_macro.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *

import urllib
import time
from selenium import webdriver
from selenium.webdriver.support.ui import *
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from datetime import datetime
import pyperclip
import chromedriver_autoinstaller
from selenium.common.exceptions import NoSuchElementException, NoAlertPresentException
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
import subprocess
import sqlite3

print('크롬 디버깅 모드 여는 중...')
result = subprocess.Popen('C:\Program Files\Google\Chrome\Application\chrome.exe --remote-debugging-port=9222 --user-data-dir=C:/ChromeTEMP --daemon') #경로 "" 없어야함, 쉘 false로

print('크롬 드라이버 설치 중...')
chromedriver_autoinstaller.install(cwd=True)
co = Options()
co.add_experimental_option('debuggerAddress', '127.0.0.1:9222')
driver = webdriver.Chrome(options=co)
print('DONE!')

class Ui_MainWindow(QObject):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(824, 637)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setToolTip("")
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setTabPosition(QTabWidget.North)
        self.tabWidget.setObjectName("tabWidget")
        self.account_list_tab = QWidget()
        self.account_list_tab.setEnabled(True)
        self.account_list_tab.setObjectName("account_list_tab")
        self.verticalLayout_4 = QVBoxLayout(self.account_list_tab)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_3 = QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.formLayout_2 = QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_id = QLabel(self.account_list_tab)
        self.label_id.setObjectName("label_id")
        self.formLayout_2.setWidget(0, QFormLayout.LabelRole, self.label_id)
        self.label_pw = QLabel(self.account_list_tab)
        self.label_pw.setObjectName("label_pw")
        self.formLayout_2.setWidget(1, QFormLayout.LabelRole, self.label_pw)
        self.edit_id = QLineEdit(self.account_list_tab)
        self.edit_id.setObjectName("edit_id")
        self.formLayout_2.setWidget(0, QFormLayout.FieldRole, self.edit_id)
        self.edit_pw = QLineEdit(self.account_list_tab)
        self.edit_pw.setEchoMode(QLineEdit.Password)
        self.edit_pw.setObjectName("edit_pw")
        self.formLayout_2.setWidget(1, QFormLayout.FieldRole, self.edit_pw)
        self.horizontalLayout.addLayout(self.formLayout_2)
        self.verticalLayout_6 = QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.btn_validation = QPushButton(self.account_list_tab)
        self.btn_validation.setObjectName("btn_validation")
        self.btn_validation.setEnabled(True)
        self.verticalLayout_6.addWidget(self.btn_validation)
        self.btn_add_account = QPushButton(self.account_list_tab)
        self.btn_add_account.setObjectName("btn_add_account")
        self.btn_add_account.setEnabled(True)
        self.verticalLayout_6.addWidget(self.btn_add_account)
        self.horizontalLayout.addLayout(self.verticalLayout_6)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        self.list_account = QTreeWidget(self.account_list_tab)
        self.list_account.setAlternatingRowColors(True)
        self.list_account.setRootIsDecorated(False)
        self.list_account.setItemsExpandable(True)
        self.list_account.setWordWrap(False)
        self.list_account.setHeaderHidden(False)
        self.list_account.setExpandsOnDoubleClick(True)
        self.list_account.setColumnCount(2)
        self.list_account.setObjectName("list_account")
        item_0 = QTreeWidgetItem(self.list_account)
        self.list_account.header().setCascadingSectionResizes(False)
        self.list_account.header().setSortIndicatorShown(False)
        self.list_account.header().setStretchLastSection(False)
        self.verticalLayout_4.addWidget(self.list_account)
        self.tabWidget.addTab(self.account_list_tab, "")
        self.band_list_tab = QWidget()
        self.band_list_tab.setObjectName("band_list_tab")
        self.verticalLayout_9 = QVBoxLayout(self.band_list_tab)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.horizontalLayout_3 = QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.formLayout_3 = QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_band_url = QLabel(self.band_list_tab)
        self.label_band_url.setObjectName("label_band_url")
        self.formLayout_3.setWidget(0, QFormLayout.LabelRole, self.label_band_url)
        self.edit_band_url = QLineEdit(self.band_list_tab)
        self.edit_band_url.setObjectName("edit_band_url")
        self.formLayout_3.setWidget(0, QFormLayout.FieldRole, self.edit_band_url)
        self.horizontalLayout_3.addLayout(self.formLayout_3)
        self.add_band_url_btn = QPushButton(self.band_list_tab)
        self.add_band_url_btn.setObjectName("add_band_url_btn")
        self.horizontalLayout_3.addWidget(self.add_band_url_btn)
        self.verticalLayout_9.addLayout(self.horizontalLayout_3)
        self.list_band = QTreeWidget(self.band_list_tab)
        self.list_band.setRootIsDecorated(False)
        self.list_band.setObjectName("list_band")
        item_0 = QTreeWidgetItem(self.list_band)
        self.list_band.header().setDefaultSectionSize(200)
        self.list_band.header().setMinimumSectionSize(32)
        self.verticalLayout_9.addWidget(self.list_band)
        self.tabWidget.addTab(self.band_list_tab, "")
        self.chat_setting_list_tab = QWidget()
        self.chat_setting_list_tab.setObjectName("chat_setting_list_tab")
        self.verticalLayout_8 = QVBoxLayout(self.chat_setting_list_tab)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.horizontalLayout_5 = QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.formLayout_5 = QFormLayout()
        self.formLayout_5.setObjectName("formLayout_5")
        self.label_setting_name = QLabel(self.chat_setting_list_tab)
        self.label_setting_name.setObjectName("label_setting_name")
        self.formLayout_5.setWidget(0, QFormLayout.LabelRole, self.label_setting_name)
        self.label_chat_name = QLabel(self.chat_setting_list_tab)
        self.label_chat_name.setObjectName("label_chat_name")
        self.formLayout_5.setWidget(1, QFormLayout.LabelRole, self.label_chat_name)
        self.label_chat_image = QLabel(self.chat_setting_list_tab)
        self.label_chat_image.setObjectName("label_chat_image")
        self.formLayout_5.setWidget(2, QFormLayout.LabelRole, self.label_chat_image)
        self.edit_chat_setting_name = QLineEdit(self.chat_setting_list_tab)
        self.edit_chat_setting_name.setObjectName("edit_chat_setting_name")
        self.formLayout_5.setWidget(0, QFormLayout.FieldRole, self.edit_chat_setting_name)
        self.btn_chat_image = QPushButton(self.chat_setting_list_tab)
        self.btn_chat_image.setObjectName("btn_chat_image")
        self.formLayout_5.setWidget(2, QFormLayout.FieldRole, self.btn_chat_image)
        self.edit_chat_name = QLineEdit(self.chat_setting_list_tab)
        self.edit_chat_name.setObjectName("edit_chat_name")
        self.formLayout_5.setWidget(1, QFormLayout.FieldRole, self.edit_chat_name)
        self.label_message_preiod = QLabel(self.chat_setting_list_tab)
        self.label_message_preiod.setObjectName("label_message_preiod")
        self.formLayout_5.setWidget(3, QFormLayout.LabelRole, self.label_message_preiod)
        self.group_message_preiod = QGroupBox(self.chat_setting_list_tab)
        self.group_message_preiod.setFlat(False)
        self.group_message_preiod.setCheckable(False)
        self.group_message_preiod.setObjectName("group_message_preiod")
        self.horizontalLayout_9 = QHBoxLayout(self.group_message_preiod)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.horizontalLayout_8 = QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.radio_min = QRadioButton(self.group_message_preiod)
        self.radio_min.setChecked(True)
        self.radio_min.setObjectName("radio_min")
        self.horizontalLayout_8.addWidget(self.radio_min)
        self.radio_thirty_days = QRadioButton(self.group_message_preiod)
        self.radio_thirty_days.setObjectName("radio_thirty_days")
        self.horizontalLayout_8.addWidget(self.radio_thirty_days)
        self.radio_one_year = QRadioButton(self.group_message_preiod)
        self.radio_one_year.setObjectName("radio_one_year")
        self.horizontalLayout_8.addWidget(self.radio_one_year)
        self.horizontalLayout_9.addLayout(self.horizontalLayout_8)
        self.formLayout_5.setWidget(3, QFormLayout.FieldRole, self.group_message_preiod)
        self.horizontalLayout_5.addLayout(self.formLayout_5)
        self.verticalLayout_8.addLayout(self.horizontalLayout_5)
        self.btn_add_chat_setting = QPushButton(self.chat_setting_list_tab)
        self.btn_add_chat_setting.setObjectName("btn_add_chat_setting")
        self.verticalLayout_8.addWidget(self.btn_add_chat_setting)
        self.list_chat_setting = QTreeWidget(self.chat_setting_list_tab)
        self.list_chat_setting.setRootIsDecorated(False)
        self.list_chat_setting.setObjectName("list_chat_setting")
        item_0 = QTreeWidgetItem(self.list_chat_setting)
        item_0.setCheckState(0, Qt.Unchecked)
        self.verticalLayout_8.addWidget(self.list_chat_setting)
        self.tabWidget.addTab(self.chat_setting_list_tab, "")
        self.task_list_tab = QWidget()
        self.task_list_tab.setObjectName("task_list_tab")
        self.verticalLayout_2 = QVBoxLayout(self.task_list_tab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_6 = QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.formLayout = QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.edit_task_name = QLineEdit(self.task_list_tab)
        self.edit_task_name.setObjectName("edit_task_name")
        self.formLayout.setWidget(0, QFormLayout.FieldRole, self.edit_task_name)
        self.label_task_name = QLabel(self.task_list_tab)
        self.label_task_name.setObjectName("label_task_name")
        self.formLayout.setWidget(0, QFormLayout.LabelRole, self.label_task_name)
        self.horizontalLayout_6.addLayout(self.formLayout)
        self.btn_add_task = QPushButton(self.task_list_tab)
        self.btn_add_task.setObjectName("btn_add_task")
        self.horizontalLayout_6.addWidget(self.btn_add_task)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_4 = QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.list_task_account = QListWidget(self.task_list_tab)
        self.list_task_account.setObjectName("list_task_account")
        item = QListWidgetItem()
        item.setCheckState(Qt.Unchecked)
        self.list_task_account.addItem(item)
        self.horizontalLayout_4.addWidget(self.list_task_account)
        self.list_task_band = QListWidget(self.task_list_tab)
        self.list_task_band.setObjectName("list_task_band")
        self.horizontalLayout_4.addWidget(self.list_task_band)
        self.list_task_setting = QListWidget(self.task_list_tab)
        self.list_task_setting.setObjectName("list_task_setting")
        self.horizontalLayout_4.addWidget(self.list_task_setting)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.list_task = QTreeView(self.task_list_tab)
        self.list_task.setObjectName("list_task")
        self.verticalLayout_2.addWidget(self.list_task)
        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.btn_start = QPushButton(self.task_list_tab)
        self.btn_start.setObjectName("btn_start")
        self.horizontalLayout_2.addWidget(self.btn_start)
        self.btn_stop = QPushButton(self.task_list_tab)
        self.btn_stop.setObjectName("btn_stop")
        self.horizontalLayout_2.addWidget(self.btn_stop)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.tabWidget.addTab(self.task_list_tab, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.layout_controll_panel = QHBoxLayout()
        self.layout_controll_panel.setObjectName("layout_controll_panel")
        self.save_btn = QPushButton(self.centralwidget)
        self.save_btn.setObjectName("save_btn")
        self.layout_controll_panel.addWidget(self.save_btn)
        self.export_btn = QPushButton(self.centralwidget)
        self.export_btn.setObjectName("export_btn")
        self.layout_controll_panel.addWidget(self.export_btn)
        self.open_btn = QPushButton(self.centralwidget)
        self.open_btn.setObjectName("open_btn")
        self.layout_controll_panel.addWidget(self.open_btn)
        self.remove_selected_btn = QPushButton(self.centralwidget)
        self.remove_selected_btn.setObjectName("remove_selected_btn")
        self.layout_controll_panel.addWidget(self.remove_selected_btn)
        self.remove_all_btn = QPushButton(self.centralwidget)
        self.remove_all_btn.setObjectName("remove_all_btn")
        self.layout_controll_panel.addWidget(self.remove_all_btn)
        self.verticalLayout.addLayout(self.layout_controll_panel)
        MainWindow.setCentralWidget(self.centralwidget)
        self.label_id.setBuddy(self.edit_id)
        self.label_pw.setBuddy(self.edit_pw)
        self.label_band_url.setBuddy(self.edit_band_url)
        self.label_setting_name.setBuddy(self.edit_chat_setting_name)
        self.label_chat_name.setBuddy(self.edit_chat_name)
        self.label_chat_image.setBuddy(self.btn_chat_image)
        self.label_task_name.setBuddy(self.edit_task_name)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.btn_validation.clicked.connect(self.validateAccount)
        self.btn_add_account.clicked.connect(self.addAccount)
        self.add_band_url_btn.clicked.connect(self.addBandUrl)
        self.btn_chat_image.clicked.connect(self.openImagePicker)
        self.btn_add_chat_setting.clicked.connect(self.addChatSetting)
        self.btn_add_task.clicked.connect(self.addTask)
        self.edit_band_url.textChanged['QString'].connect(self.validateBandUrl)
        self.save_btn.clicked.connect(self.save)
        self.export_btn.clicked.connect(self.export)
        self.open_btn.clicked.connect(self.open)
        self.remove_selected_btn.clicked.connect(self.removeSelected)
        self.remove_all_btn.clicked.connect(self.removeAll)
        #QMetaObject.connectSlotsByName(MainWindow)

    class ValidateAccountThread(QThread):
        state_logged_in = pyqtSignal()
        state_login_success = pyqtSignal()
        state_login_fail = pyqtSignal()
        def __init__(self, id, pw, parent=None):
            super().__init__()
            self.id = id
            self.pw = pw
 
        def run(self):
            result = False
            driver.get('https://band.us/home')
            
            time.sleep(3)

            if driver.current_url != 'https://band.us/home': # 로그인이 된 상태
                self.state_logged_in.emit()
            else:
                login_btn = WebDriverWait(driver, 10).until(
                        EC.presence_of_element_located((By.XPATH, '//*[@id="header"]/div/div/a[2]'))
                )
                login_btn.click()
                naver_btn = WebDriverWait(driver, 10).until(
                        EC.presence_of_element_located((By.CLASS_NAME, 'uBtn.-icoType.-naver.externalLogin'))
                )
                naver_btn.click()

                """
                네이버 로그인
                """
                user_id = driver.find_element_by_id("id")
                password = driver.find_element_by_id("pw")
                time.sleep(1)

                user_id.click()
                pyperclip.copy(self.id)
                user_id.send_keys(Keys.CONTROL, 'v')
                time.sleep(1)

                password.click()
                pyperclip.copy(self.pw)
                password.send_keys(Keys.CONTROL, 'v')
                time.sleep(1)

                password.submit()
                
                time.sleep(3)

                if driver.current_url == 'https://band.us/':
                    result = True
            
                if result: # 올바른 아이디
                    self.state_login_success.emit()
                else: # 올바르지 못한 아이디
                    self.state_login_fail.emit()

    
    def validateAccount(self):
        id = self.edit_id.text().strip()
        pw = self.edit_pw.text().strip()
        if id == "" or pw == "":
            QMessageBox.warning(self.centralwidget, '경고', '빈칸을 모두 채워주세요', QMessageBox.Ok, QMessageBox.Ok)
            return
        self.validateAccountThread = self.ValidateAccountThread(parent=self, id=id, pw=pw)
        self.validateAccountThread.state_logged_in.connect(self.state_logged_in)
        self.validateAccountThread.state_login_success.connect(self.state_login_success)
        self.validateAccountThread.state_login_fail.connect(self.state_login_fail)
        self.validateAccountThread.start()


    @pyqtSlot()
    def state_logged_in(self):
        QMessageBox.warning(self.centralwidget, '로그인 상태', '로그아웃 후 다시 시도해 주세요', QMessageBox.Ok, QMessageBox.Ok)

    @pyqtSlot()
    def state_login_success(self):
        QMessageBox.information(self.centralwidget, '로그인 성공', '아래 추가 버튼을 눌러 주세요', QMessageBox.Ok, QMessageBox.Ok)

    @pyqtSlot()
    def state_login_fail(self):
        QMessageBox.critical(self, '로그인 실패', '아이디 또는 비밀번호를 확인해 주세요', QMessageBox.Ok, QMessageBox.Ok)

    def addAccount(self):
        pass

    def addBandUrl(self):
        pass

    def addChatSetting(self):
        pass

    def addTask(self):
        pass

    def openImagePicker(self):
        pass

    def validateBandUrl(self):
        pass

    def save(self):
        pass

    def export(self):
        pass

    def open(self):
        pass

    def removeSelected(self):
        pass

    def removeAll(self):
        pass

    def retranslateUi(self, MainWindow):
        _translate = QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "채팅방 생성 매크로"))
        self.label_id.setText(_translate("MainWindow", "아이디"))
        self.label_pw.setText(_translate("MainWindow", "비밀번호"))
        self.edit_id.setPlaceholderText(_translate("MainWindow", "아이디"))
        self.edit_pw.setPlaceholderText(_translate("MainWindow", "비밀번호"))
        self.btn_validation.setText(_translate("MainWindow", "확인"))
        self.btn_add_account.setText(_translate("MainWindow", "추가"))
        self.list_account.setSortingEnabled(False)
        self.list_account.headerItem().setText(0, _translate("MainWindow", "아이디"))
        self.list_account.headerItem().setText(1, _translate("MainWindow", "비밀번호"))
        __sortingEnabled = self.list_account.isSortingEnabled()
        self.list_account.setSortingEnabled(False)
        #self.list_account.topLevelItem(0).setText(0, _translate("MainWindow", "chad0706"))
        #self.list_account.topLevelItem(0).setText(1, _translate("MainWindow", "asdf0706"))
        self.list_account.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.account_list_tab), _translate("MainWindow", "계정설정"))
        self.label_band_url.setText(_translate("MainWindow", "밴드주소"))
        self.add_band_url_btn.setText(_translate("MainWindow", "추가"))
        self.list_band.headerItem().setText(0, _translate("MainWindow", "밴드이름"))
        self.list_band.headerItem().setText(1, _translate("MainWindow", "밴드주소"))
        __sortingEnabled = self.list_band.isSortingEnabled()
        self.list_band.setSortingEnabled(False)
        self.list_band.topLevelItem(0).setText(0, _translate("MainWindow", "초등교육 정보 | 밴드"))
        self.list_band.topLevelItem(0).setText(1, _translate("MainWindow", "https://band.us/band/55170325"))
        self.list_band.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.band_list_tab), _translate("MainWindow", "밴드목록"))
        self.label_setting_name.setText(_translate("MainWindow", "설정 이름"))
        self.label_chat_name.setText(_translate("MainWindow", "채팅방 이름"))
        self.label_chat_image.setText(_translate("MainWindow", "채팅방 이미지"))
        self.btn_chat_image.setText(_translate("MainWindow", "찾아보기"))
        self.label_message_preiod.setText(_translate("MainWindow", "보관기간"))
        self.group_message_preiod.setTitle(_translate("MainWindow", "보관기간"))
        self.radio_min.setText(_translate("MainWindow", "보관안함"))
        self.radio_thirty_days.setText(_translate("MainWindow", "30일"))
        self.radio_one_year.setText(_translate("MainWindow", "1년"))
        self.btn_add_chat_setting.setText(_translate("MainWindow", "추가"))
        self.list_chat_setting.headerItem().setText(0, _translate("MainWindow", "설정 이름"))
        self.list_chat_setting.headerItem().setText(1, _translate("MainWindow", "채팅방 이름"))
        self.list_chat_setting.headerItem().setText(2, _translate("MainWindow", "채팅방 이미지"))
        self.list_chat_setting.headerItem().setText(3, _translate("MainWindow", "보관기간"))
        __sortingEnabled = self.list_chat_setting.isSortingEnabled()
        self.list_chat_setting.setSortingEnabled(False)
        self.list_chat_setting.topLevelItem(0).setText(0, _translate("MainWindow", "테스트"))
        self.list_chat_setting.topLevelItem(0).setText(1, _translate("MainWindow", "테스트"))
        self.list_chat_setting.topLevelItem(0).setText(2, _translate("MainWindow", "C:\\Users\\wooch\\OneDrive\\바탕 화면\\sample.jpg"))
        self.list_chat_setting.topLevelItem(0).setText(3, _translate("MainWindow", "보관안함"))
        self.list_chat_setting.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.chat_setting_list_tab), _translate("MainWindow", "설정목록"))
        self.label_task_name.setText(_translate("MainWindow", "작업이름"))
        self.btn_add_task.setText(_translate("MainWindow", "추가"))
        __sortingEnabled = self.list_task_account.isSortingEnabled()
        self.list_task_account.setSortingEnabled(False)
        item = self.list_task_account.item(0)
        item.setText(_translate("MainWindow", "정우창"))
        self.list_task_account.setSortingEnabled(__sortingEnabled)
        self.btn_start.setText(_translate("MainWindow", "실행"))
        self.btn_stop.setText(_translate("MainWindow", "종료"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.task_list_tab), _translate("MainWindow", "작업목록"))
        self.save_btn.setText(_translate("MainWindow", "저장"))
        self.export_btn.setText(_translate("MainWindow", "내보내기"))
        self.open_btn.setText(_translate("MainWindow", "불러오기"))
        self.remove_selected_btn.setText(_translate("MainWindow", "선택삭제"))
        self.remove_all_btn.setText(_translate("MainWindow", "전체삭제"))
        

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
